#!/usr/bin/env bash

# upload-package
#
# upload package to distribution server
#
# author  : stefan schablowski
# contact : stefan.schablowski@desmodyne.com
# created : 2016-06-02


# TODO: make sure this is only run on a Debian or Ubuntu system


# -----------------------------------------------------------------------------
# configure script parameters

# absolute path to this script: http://stackoverflow.com/a/9107028
path_to_this_script="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# path from this script to project root
path_to_project_root='../..'

# absolute path to local folder to upload
local_folder="${path_to_this_script}/${path_to_project_root}/../tmp/deploy/packages"

# these assume packages being uploaded were built on this host
# and there is no "cross-package-building" taking place, ie.
# no creating Debian 32-bit packages on a Ubuntu 64-bit host

# TODO: check first if required executables are available

# determine Linux distribution (e.g. Debian, Ubuntu)
distribution=$(lsb_release --id --short | tr '[:upper:]' '[:lower:]')

# determine architecture to determine distribution bitness (e.g. i386, amd64)
architecture=$(arch)

if   [[ "${architecture}" == 'i686' ]] ;
  then distribution_folder='binary-i386'
elif [[ "${architecture}" == 'x86_64' ]] ;
  then distribution_folder='binary-amd64'
else
  echo "Unsupported architecture ${architecture}"
  exit -1
fi

# archive area: http://askubuntu.com/a/27514
# https://www.debian.org/doc/debian-policy/ch-archive.html
archive_area='non-free'

# determine git branch to determine distribution channel
git_branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)

if [[ "${git_branch}" != 'develop' &&
      "${git_branch}" !=  feature* &&
      "${git_branch}" != 'master'  &&
      "${git_branch}" !=  release* ]] ;
  then
      echo "Unsupported git branch / distribution channel ${git_branch}"
      exit -1
fi

if [ ! -z "$1" ] ;
  then
    distribution_channel="$1"
    message="using command line argument, sync'ing to ${distribution_channel} channel at"
else
  if   [[ "${git_branch}" ==  'develop' ]] ;
    then distribution_channel='develop'
  elif [[ "${git_branch}" ==   feature* ]] ;
    then distribution_channel='feature'
  elif [[ "${git_branch}" ==  'master'  ]] ;
    then distribution_channel='master'
  elif [[ "${git_branch}" ==   release* ]] ;
    then distribution_channel='release'
  fi
  message="on ${git_branch} git branch, sync'ing to ${distribution_channel} channel at"
fi

# remote server and folder to upload to
# NOTE: this assumes remote access by SSH key being fully set up
remote_folder="update:/var/www/desmodyne.com/packages/public_html/protected/${distribution}/dists/${distribution_channel}/${archive_area}/${distribution_folder}"


# -----------------------------------------------------------------------------
# sync local to remote folder

echo
echo "${message}"
echo "${remote_folder}:"
echo

rsync --archive --checksum --verbose "${local_folder}/" "${remote_folder}"
