#!/usr/bin/env bash

# dd-push-release
#
# push a software release (i.e. its tag)
#
# author  : stefan schablowski
# contact : stefan.schablowski@desmodyne.com
# created : 2016-06-06


# -----------------------------------------------------------------------------
# process command line arguments

if [ $# -ne 1 ]
then
    echo "Usage: $(basename "$0") <repository root folder>"
    exit -1
else
    if [ ! -e "$1" ]
    then
        echo "$1: No such file or directory"
        exit -1
    fi
    if [ ! -d "$1" ]
    then
        echo "$1: Not a directory"
        exit -1
    fi
fi

# TODO: prevent processing repo this file is in during development ?
# TODO: verify required executables are available before using them ?
# TODO: script return value when run as Jenkins job ?!?
# TODO: add leading zero to calender week in release name


# -----------------------------------------------------------------------------
# configure script parameters

# absolute path to the root folder of the repository to process
repo_root="$(realpath "$1")"

# name of the release, follows YYYY.CW pattern; as a release is created to
# publish the efforts of the past week, the calender week is that of last week
release_name="$(date +"%Y").$(( $(date +"%V") - 1))"


# NOTE: pushd / popd require bash
pushd "${repo_root}" > /dev/null


# -----------------------------------------------------------------------------
# push the release

echo "Push release tag ${release_name} in ${repo_root}:"
git push --tags

res="$?"

if [ "${res}" -ne 0 ]
then
    # git push prints its own error messages
    popd > /dev/null
    exit "${res}"
fi

echo "Push changes to default remote:"
git push

res="$?"

if [ "${res}" -ne 0 ]
then
    # git push prints its own error messages
    popd > /dev/null
    exit "${res}"
fi


popd > /dev/null
